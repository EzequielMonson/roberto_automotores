from PIL import Image
import os
import re

def limpiar_guiones_dobles_y_mayusculas(carpeta):
    archivos = os.listdir(carpeta)
    print(f"üìÇ Archivos en: {os.path.abspath(carpeta)}")

    for archivo in archivos:
        ruta_original = os.path.join(carpeta, archivo)

        if not os.path.isfile(ruta_original):
            continue

        # Limpiar guiones y poner en may√∫sculas
        nombre_limpio = re.sub(r'_+', '_', archivo)
        nombre_mayusculas = nombre_limpio.upper()
        nueva_ruta = os.path.join(carpeta, nombre_mayusculas)

        if nombre_mayusculas != archivo:
            os.rename(ruta_original, nueva_ruta)
            print(f"üîÑ Renombrado: {archivo} ‚Üí {nombre_mayusculas}")
        else:
            print(f"‚úîÔ∏è Sin cambios: {archivo}")

def convertir_jpg_a_webp_mismo_directorio(carpeta):
    archivos = os.listdir(carpeta)
    print(f"üìÇ Carpeta: {os.path.abspath(carpeta)}")
    print("üìÑ Archivos encontrados:", archivos)

    for archivo in archivos:
        if archivo.lower().endswith((".jpg", ".jpeg")):
            ruta_jpg = os.path.join(carpeta, archivo)

            # Limpiar guiones, poner en may√∫sculas y cambiar extensi√≥n
            nombre_base = os.path.splitext(archivo)[0]
            nombre_limpio = re.sub(r'_+', '_', nombre_base).upper()
            nombre_webp = nombre_limpio + ".WEBP"
            ruta_webp = os.path.join(carpeta, nombre_webp)

            try:
                with Image.open(ruta_jpg) as imagen:
                    imagen.save(ruta_webp, "webp")
                    print(f"‚úÖ Convertido: {archivo} ‚Üí {nombre_webp}")
            except Exception as e:
                print(f"‚ùå Error al convertir {archivo}: {e}")
        else:
            print(f"‚ö†Ô∏è No es JPG: {archivo}")

# Uso:
carpeta_actual = os.path.dirname(__file__)
# convertir_jpg_a_webp_mismo_directorio(carpeta_actual)
limpiar_guiones_dobles_y_mayusculas(carpeta_actual)
